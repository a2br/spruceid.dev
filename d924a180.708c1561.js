(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{85:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return b}));var r=a(3),i=a(7),n=(a(0),a(94)),o={id:"intro",title:"Introduction to DIDKit",sidebar_label:"Introduction",slug:"/didkit/"},s={unversionedId:"didkit/intro",id:"didkit/intro",isDocsHomePage:!1,title:"Introduction to DIDKit",description:"DIDKit is mostly written in Rust and provides Verifiable Credential and",source:"@site/docs/didkit/intro.md",slug:"/didkit/",permalink:"/docs/didkit/",editUrl:"https://github.com/spruceid/docs/didkit/intro.md",version:"current",sidebar_label:"Introduction",sidebar:"docs",previous:{title:"Glossary & References",permalink:"/docs/glossary"},next:{title:"Terminology",permalink:"/docs/didkit/terminology"}},c=[{value:"Specifications and Test Suites",id:"specifications-and-test-suites",children:[]},{value:"Cryptography Backends",id:"cryptography-backends",children:[]},{value:"Features",id:"features",children:[]},{value:"Roadmap",id:"roadmap",children:[]}],l={toc:c};function b(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(n.b)("wrapper",Object(r.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"DIDKit is mostly written in Rust and provides Verifiable Credential and\nDecentralized Identifier functionality across different platforms. Rust was\npicked for its expressive type system, memory safety, and suitability across\ndifferent platforms including embedded systems."),Object(n.b)("p",null,"It supports the following high level use cases, with more to be added shortly:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"W3C Verifiable Credentials with JSON-LD Proofs: issuance, presentation, and\nverification"),Object(n.b)("li",{parentName:"ul"},"W3C Decentralized Identifiers: resolution for did-key, did-web, and one layer\nof did-tezos")),Object(n.b)("p",null,"DIDKit ships with a command line tool and HTTP service. The HTTP service aims\nto comply with ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://w3c-ccg.github.io/vc-http-api/"}),"HTTP-VC-API"),"."),Object(n.b)("p",null,"Through cross-compilation and linking through C ABIs, DIDKit supports other\nplatforms through SDKs written in:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/spruceid/didkit/tree/main/lib/cbindings"}),"C/Objective-C")," (C ABI)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/spruceid/didkit/tree/main/lib/java"}),"Java")," (via JNI, see an ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/spruceid/didkit/tree/example-java-1/examples/java-springboot"}),"example project using Spring Boot"),")"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/spruceid/didkit/tree/main/lib/android"}),"Android")," (via Java)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/spruceid/didkit/tree/main/lib/flutter"}),"Flutter")," (via Android and iOS)"),Object(n.b)("li",{parentName:"ul"},"(",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/spruceid/didkit/pull/17"}),"WIP"),") JavaScript/ES6 (npm-linked library)"),Object(n.b)("li",{parentName:"ul"},"(",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/spruceid/didkit/pull/15"}),"WIP"),") WASM (cross-compiled using ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/rustwasm/wasm-pack"}),"wasm-pack"),")"),Object(n.b)("li",{parentName:"ul"},"(Future) PHP, Python, Ruby/Rails, Go, C#, C++")),Object(n.b)("p",null,"Although support across different platforms is in its early stages, we will\ncontinue to add new platforms and improve interface ergonomics over time. For\nplatforms that do not currently have SDK support, the HTTP API and command line\ntools are readily integrated."),Object(n.b)("h2",{id:"specifications-and-test-suites"},"Specifications and Test Suites"),Object(n.b)("p",null,"To demonstrate our commitment to standards and interoperability, we have\nensured that our implementation conforms to the following specifications and\naspire to pass their test suites where applicable:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.w3.org/TR/vc-data-model/"}),"W3C Verifiable Credentials")," ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/w3c/vc-test-suite"}),"Test Suite")," (passing, ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/spruceid/ssi/tree/main/vc-test"}),"instructions"),")"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.w3.org/TR/did-core/"}),"W3C Decentralized Identifiers")," (test suite pending CR, ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/spruceid/ssi/blob/main/src/did.pest"}),"syntax support"),")"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/w3c-ccg/vc-http-api/tree/master/packages/plugfest-2020"}),"VC HTTP API Test Suite")," (passing, ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/spruceid/vc-http-api/tree/spruce/packages/plugfest-2020/vendors/spruce"}),"instructions"),")"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://json-ld.github.io/normalization/tests/"}),"RDF Dataset Normalization Test Cases")," (passing, ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"#"}),"instructions"),")"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://w3c.github.io/json-ld-api/tests/toRdf-manifest.html"}),"JSON-LD to RDF Transformation Test Cases")," (440/450 passing, ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"#"}),"instructions"),")"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://w3c-ccg.github.io/ld-proofs/"}),"Linked Data Proofs 1.0")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://w3c-ccg.github.io/did-resolution/"}),"DID Resolution")),Object(n.b)("li",{parentName:"ul"},"IETF: ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc7519"}),"JWT"),",\n",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc7515"}),"JWS"),",\n",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc7517"}),"JWK"),",\n",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc7518"}),"JWA"),",\n",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://tools.ietf.org/html/rfc8037"}),"CFRG ECDH and Signatures in JOSE")," ")),Object(n.b)("h2",{id:"cryptography-backends"},"Cryptography Backends"),Object(n.b)("p",null,"We strongly prefer tried and tested implementations of cryptographic functions\nand believe that it's most responsible to list them out in a forthcoming manner\nto any potential users. DIDKit is engineered so that the target platform and\ncompile-time flags may be used to specify different cryptographic backends,\nsuch as to leverage native hardware capabilities, cross-compile to e.g. WASM,\nor to give advanced users the option to only use libraries that they trust."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://docs.rs/ring/0.16.19/ring/"}),Object(n.b)("inlineCode",{parentName:"a"},"ring"),", v0.16"),": default for hashes, ed25519\nfunctions, RSA, and randomness. The ed25519 functions here cannot currently\ncompile to WASM."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://docs.rs/rsa/0.3.0/rsa/"}),Object(n.b)("inlineCode",{parentName:"a"},"rsa"),", v0.3"),": optionally for RSA."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://docs.rs/ed25519-dalek/1.0.1/ed25519_dalek"}),Object(n.b)("inlineCode",{parentName:"a"},"ed25519-dalek"),", v1"),":\noptionally for ed25519. Compiles to WASM."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://docs.rs/rand/0.7.3/rand/"}),Object(n.b)("inlineCode",{parentName:"a"},"rand"),", v0.7"),": optionally for randomness."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://docs.rs/sha2/0.9.2/sha2/"}),Object(n.b)("inlineCode",{parentName:"a"},"sha2"),", v0.9"),": optionally for sha256\nhashes.")),Object(n.b)("p",null,"If you have constructive opinions about the set of cryptographic libraries that\nshould be supported, please ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/spruceid/ssi"}),"open an issue"),"."),Object(n.b)("h2",{id:"features"},"Features"),Object(n.b)("p",null,"The core featureset of DIDKit is expanding steadily over time and in the open,\nso feel free to engage with the repository directly on github. Currently,\nDIDKit currently supports the following features:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Key generation and handling."),Object(n.b)("li",{parentName:"ul"},"Issuance and presentation of W3C Verifiable Credentials in JSON-LD, signed by\na local and/or passed key."),Object(n.b)("li",{parentName:"ul"},"Verification of W3C Verifiable Credentials in JSON-LD.")),Object(n.b)("p",null,"DID Methods supported so far: "),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"did-key"),Object(n.b)("li",{parentName:"ul"},"did-web"),Object(n.b)("li",{parentName:"ul"},"did-tezos (tz1 and resolution layer 1)")),Object(n.b)("p",null,"Proof types verifiable so far:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"RSASignature2018"),Object(n.b)("li",{parentName:"ul"},"Ed25519VerificationKeys")),Object(n.b)("h2",{id:"roadmap"},"Roadmap"),Object(n.b)("p",null,"The following tools and features are high priority for subsequent releases:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Exposing interfaces for JWT-based Verifiable Credential workflows"),Object(n.b)("li",{parentName:"ol"},"JSON-LD context editor"),Object(n.b)("li",{parentName:"ol"},"Registration of several new LD signature suites and support for new\ncryptography"),Object(n.b)("li",{parentName:"ol"},"Further DID method support: did-tezos (tz2/tz3 and resolution layers 2 and\n3), did-btcr, did-onion"),Object(n.b)("li",{parentName:"ol"},"BBS+ signatures"),Object(n.b)("li",{parentName:"ol"},"DIDComm support"),Object(n.b)("li",{parentName:"ol"},"Aries interoperability profile support")))}b.isMDXComponent=!0},94:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var r=a(0),i=a.n(r);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=i.a.createContext({}),b=function(e){var t=i.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=b(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=b(a),u=r,m=p["".concat(o,".").concat(u)]||p[u]||d[u]||n;return a?i.a.createElement(m,s(s({ref:t},l),{},{components:a})):i.a.createElement(m,s({ref:t},l))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,o=new Array(n);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<n;l++)o[l]=a[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);