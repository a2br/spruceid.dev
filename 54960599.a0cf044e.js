(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{103:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,m=d["".concat(l,".").concat(b)]||d[b]||u[b]||i;return n?a.a.createElement(m,o(o({ref:t},s),{},{components:n})):a.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=b;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),i=(n(0),n(103)),l={id:"install",title:"Installation"},o={unversionedId:"credible/install",id:"credible/install",isDocsHomePage:!1,title:"Installation",description:"App stores",source:"@site/docs/credible/install.md",slug:"/credible/install",permalink:"/docs/credible/install",editUrl:"https://github.com/spruceid/docs/credible/install.md",version:"current",sidebar:"docs",previous:{title:"Core Concepts",permalink:"/docs/credible/concepts"},next:{title:"Authenticating to other services",permalink:"/docs/credible/authn"}},c=[{value:"App stores",id:"app-stores",children:[]},{value:"Manual Assembly (Android)",id:"manual-assembly-android",children:[]},{value:"Setup &amp; Testing",id:"setup--testing",children:[]},{value:"Seed Recovery",id:"seed-recovery",children:[]}],s={toc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"app-stores"},"App stores"),Object(i.b)("p",null,"Links and qR codes for app stores coming soon (future releases)."),Object(i.b)("h2",{id:"manual-assembly-android"},"Manual Assembly (Android)"),Object(i.b)("p",null,"A manual build of this project has the following dependencies:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A nightly build of the rust compiler, most easily obtained using\n",Object(i.b)("a",{parentName:"li",href:"https://www.rust-lang.org/tools/install"},"rustup"),". Once installed, nightly can\nbe enabled globally using:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ rustup default nightly \n")),Object(i.b)("p",null,"Or on a per-project level by running the following in the root of the targeted\ncargo project:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ rustup override set nightly\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Java 7 or higher")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",{parentName:"p",href:"https://flutter.dev/docs/get-started/install"},"Flutter")," set to the dev channel.\nThis is done on *nix type systems after installation by running:"))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter channel dev\n$ flutter upgrade\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://developer.android.com/studio/install"},"Android Studio")," which must be\ninstalled, then opened for the first time to allow further dependencies to be\ninstalled.")),Object(i.b)("p",null,"This project also depends on two other Spruce projects:\n",Object(i.b)("a",{parentName:"p",href:"https://github.com/spruceid/didkit"},"DIDKit"),", which in turn depends on\n",Object(i.b)("a",{parentName:"p",href:"https://github.com/spruceid/ssi"},"ssi"),"."),Object(i.b)("p",null,"For now it's required to build DIDKit on the side before building this project.\nFor more detailed instructions on how to set it up, please see the ",Object(i.b)("a",{parentName:"p",href:"/docs/didkit/install#manual"},"DIDKit\nInstallation Manual Installation")," and the ",Object(i.b)("a",{parentName:"p",href:"/docs/didkit/ffis#android"},"DIDKit\nAndroid Bindings")," Sections."),Object(i.b)("p",null,"If all of the Spruce dependencies are in the same directory, they will correctly\nresolve using relative paths, and the next two steps can be skipped. Otherwise,\npoint ",Object(i.b)("inlineCode",{parentName:"p"},"didkit")," to ",Object(i.b)("inlineCode",{parentName:"p"},"ssi")," by editing the didkit/lib/Cargo.toml:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nssi = { path = "path/to/ssi", default-features = false }\ndid-key = { path = "path/to/ssi/did-key" }\ndid-tezos = { path = "path/to/ssi/did-tezos" }\ndid-web = { path = "path/to/ssi/did-web", optional = true }\n')),Object(i.b)("p",null,"And point ",Object(i.b)("inlineCode",{parentName:"p"},"Credible")," to ",Object(i.b)("inlineCode",{parentName:"p"},"didkit")," in the credible/pubspec.yaml:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"dependencies:\n  didkit:\n    path: path/to/didkit/lib/flutter\n")),Object(i.b)("p",null,"Then, to build the flutter artifacts, run one of the following\ncommands from the root of this repository:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter build apk             # Android APK\n$ flutter build appbundle       # Android Appbundle\n")),Object(i.b)("p",null,"Then ",Object(i.b)("a",{parentName:"p",href:"https://developer.android.com/studio/run/emulator"},"Android Studio")," can be\nused to run the built application."),Object(i.b)("p",null,"Alternatively, the command"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter run\n")),Object(i.b)("p",null,"Will work as well with a running emulator."),Object(i.b)("h2",{id:"setup--testing"},"Setup & Testing"),Object(i.b)("p",null,"Coming soon."),Object(i.b)("h2",{id:"seed-recovery"},"Seed Recovery"),Object(i.b)("p",null,"Coming soon."))}p.isMDXComponent=!0}}]);