(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{144:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/credible_swimlane_issuance-51c9a9073193b29969c603155432d71d.png"},145:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/files/credible_swimlane_issuance-51c9a9073193b29969c603155432d71d.png"},146:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/credible_swimlane_vp_request-0b76c9a3cc5ffb78c6be6a355a54b262.png"},147:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/files/credible_swimlane_vp_request-0b76c9a3cc5ffb78c6be6a355a54b262.png"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var i=n(3),a=n(7),r=(n(0),n(99)),o={id:"concepts",title:"Core Concepts"},l={unversionedId:"credible/concepts",id:"credible/concepts",isDocsHomePage:!1,title:"Core Concepts",description:"Credible is designed to be a powerful but simple personal wallet for holding verifiable credentials-- and little more.",source:"@site/docs/credible/concepts.md",slug:"/credible/concepts",permalink:"/docs/credible/concepts",editUrl:"https://github.com/spruceid/docs/credible/concepts.md",version:"current",sidebar:"docs",previous:{title:"Terminology",permalink:"/docs/credible/terminology"},next:{title:"Installation",permalink:"/docs/credible/install"}},c=[{value:"High-level explanation of QR Code Logic",id:"high-level-explanation-of-qr-code-logic",children:[]},{value:"CredentialOffer",id:"credentialoffer",children:[{value:"Flow",id:"flow",children:[]}]},{value:"Verifiable Presentation Request",id:"verifiable-presentation-request",children:[{value:"Parameters",id:"parameters",children:[]},{value:"Flow",id:"flow-1",children:[]}]},{value:"Future Protocols",id:"future-protocols",children:[]}],s={toc:c};function b(e){var t=e.components,o=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},s,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Credible is designed to be a powerful but simple personal wallet for holding verifiable credentials-- and little more. "),Object(r.b)("h2",{id:"high-level-explanation-of-qr-code-logic"},"High-level explanation of QR Code Logic"),Object(r.b)("p",null,"All QRCode interactions start as listed below:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"User scans a QRCode containing a URL;"),Object(r.b)("li",{parentName:"ol"},"User is presented the choice to trust the domain in the URL;"),Object(r.b)("li",{parentName:"ol"},"App makes a GET request to the URL;")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"Todo:"),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"Clarify if there are two GET requests with choice of identifier/alias in between, or one. ")))),Object(r.b)("p",null,"Then, depending on the type of message, one of the following protocols will be\nexecuted."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"Did this selection step gonna make it into v0.1?"),Object(r.b)("li",{parentName:"ul"},"Is the exception if keystore is corrupted implemented yet ?")))),Object(r.b)("h2",{id:"credentialoffer"},"CredentialOffer"),Object(r.b)("p",null,"If the wallet manages multiple keypairs/subject identifiers, the user will be prompted to select one. If no additional subject identifiers are available, the wallet will default to the on-device keypair created at time of installation. If this cannot be found, the protocol will throw an exception.\n:::"),Object(r.b)("p",null,"After receiving a ",Object(r.b)("inlineCode",{parentName:"p"},"CredentialOffer")," from a trusted host and selecting (or defaulting to) an identifier to which that credential will be issued, the wallet app calls the issuer's API with the selected ",Object(r.b)("inlineCode",{parentName:"p"},"subject_id"),' in the form body. If the on-device identifier is chosen or defaulted to, it must first be wrapped in a "DID:Key" object (See glossary), which is derived deterministically from the keypair stored in the ',Object(r.b)("inlineCode",{parentName:"p"},"FlutterSecureStorage"),", which is backed by ",Object(r.b)("a",{parentName:"p",href:"https://developer.android.com/training/articles/keystore"},"KeyStore")," on Android and ",Object(r.b)("a",{parentName:"p",href:"https://developer.apple.com/documentation/security/keychain_services"},"Keychain")," on iOS."),Object(r.b)("h3",{id:"flow"},"Flow"),Object(r.b)("p",null,"The flow of events and actions is thus:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"User is presented a credential preview to review and make their decision;"),Object(r.b)("li",{parentName:"ol"},"[Optional]"," ",Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},'If User selected identifier (by "petname" or alias), its current DID will be fetched from app storage. Otherwise:'),Object(r.b)("li",{parentName:"ol"},"App generates ",Object(r.b)("inlineCode",{parentName:"li"},"didKey")," from the secure on-device keypair using the ",Object(r.b)("inlineCode",{parentName:"li"},"DIDKit.keyToDIDKey")," function;"))),Object(r.b)("li",{parentName:"ol"},"App makes a POST request to the initial URL with ",Object(r.b)("inlineCode",{parentName:"li"},"subject_id")," set to this DID;"),Object(r.b)("li",{parentName:"ol"},"App receives and stores the new credential in app storage;"),Object(r.b)("li",{parentName:"ol"},"User is redirect back to the wallet's homepage.")),Object(r.b)("p",null,Object(r.b)("img",{alt:"swimlane diagram",src:n(144).default}),"\n",Object(r.b)("a",{target:"_blank",href:n(145).default},"hi-rez swimlane here")),Object(r.b)("h2",{id:"verifiable-presentation-request"},"Verifiable Presentation Request"),Object(r.b)("p",null,"After receiving a ",Object(r.b)("inlineCode",{parentName:"p"},"VerifiablePresentationRequest")," from a trusted host, the wallet app calls the requestor's POST API with the ",Object(r.b)("inlineCode",{parentName:"p"},"presentation")," value set in the body. This value is a stringified JSON-LD presentation object generated  from the selected credential and signed with the credential's private key using ",Object(r.b)("inlineCode",{parentName:"p"},"DIDKit.issuePresentation"),"."),Object(r.b)("h3",{id:"parameters"},"Parameters"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"Todo: "),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"I assume the ",Object(r.b)("inlineCode",{parentName:"li"},"holder")," is not being validated, right? If the credential has a URI that isn't a DID or a DID:Key, the presentation issuance protocol doesn't throw an exception?"),Object(r.b)("li",{parentName:"ul"},"Only one VC for now, right? stringified JSON-LD, I assume?"),Object(r.b)("li",{parentName:"ul"},"What do you mean the credential's stored private key? Do you mean the private key corresponding to the ",Object(r.b)("inlineCode",{parentName:"li"},"id")," of the credential ",Object(r.b)("em",{parentName:"li"},"subject"),"?")))),Object(r.b)("p",null,"Here are some of the parameters used to generate a presentation:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"presentation"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"id")," is set to a unique and random ",Object(r.b)("inlineCode",{parentName:"li"},"UUID.v4")," generated in each ",Object(r.b)("inlineCode",{parentName:"li"},"issuePresentation")," call;"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"holder")," is set to the selected credential's subject (DID);"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"verifiableCredential")," contains the presented credential in stringified JSON-LD form;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"options"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"verificationMethod")," is set to the ",Object(r.b)("inlineCode",{parentName:"li"},"id")," field in the passed DID's ",Object(r.b)("inlineCode",{parentName:"li"},"verificationMethod"),";"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"proofPurpose")," only supports 'authentication' for now;"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"challenge")," is set to the ",Object(r.b)("inlineCode",{parentName:"li"},"challenge")," value found in the request;"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"domain")," is set to the ",Object(r.b)("inlineCode",{parentName:"li"},"domain")," value found in the request;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"key")," is the credential's stored private key;")),Object(r.b)("h3",{id:"flow-1"},"Flow"),Object(r.b)("p",null,"The flow of events and actions is listed below:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"User is presented a presentation request to review and make a decision;"),Object(r.b)("li",{parentName:"ul"},"App generates ",Object(r.b)("inlineCode",{parentName:"li"},"didKey")," from the stored private key using ",Object(r.b)("inlineCode",{parentName:"li"},"DIDKit.keyToDIDKey"),";"),Object(r.b)("li",{parentName:"ul"},"App issues a presentation using ",Object(r.b)("inlineCode",{parentName:"li"},"DIDKit.issuePresentation"),";"),Object(r.b)("li",{parentName:"ul"},"App makes a POST request to the initial URL with the presentation;"),Object(r.b)("li",{parentName:"ul"},"User is redirect back to the wallet.")),Object(r.b)("p",null,Object(r.b)("img",{alt:"swimlane diagram",src:n(146).default}),"\n",Object(r.b)("a",{target:"_blank",href:n(147).default},"hi-rez swimlane here")),Object(r.b)("h2",{id:"future-protocols"},"Future Protocols"),Object(r.b)("p",null,"Coming in future versions (before v1.0)"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"DIDComm v2 support"),Object(r.b)("li",{parentName:"ul"},"Presentation Exchange")),Object(r.b)("p",null,"Note: Verifiable Presentation requests are presented in the form specified by the current W3C-CCG ",Object(r.b)("a",{parentName:"p",href:"https://w3c-ccg.github.io/vp-request-spec/"},"VP Request Spec")," draft. As community-wide, vendor-agnostic specifications for Credential/",Object(r.b)("a",{parentName:"p",href:"https://identity.foundation/presentation-exchange/"},"Presentation Exchange"),", ",Object(r.b)("a",{parentName:"p",href:"https://w3c-ccg.github.io/universal-wallet-interop-spec/"},"Wallet Portability"),", and DID-based ",Object(r.b)("a",{parentName:"p",href:"https://identity.foundation/didcomm-messaging/spec/"},"Transport")," come into maturity, we will support them in future versions."))}b.isMDXComponent=!0},99:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(n),u=i,m=p["".concat(o,".").concat(u)]||p[u]||d[u]||r;return n?a.a.createElement(m,l(l({ref:t},s),{},{components:n})):a.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);