"use strict";(self.webpackChunkdevsite=self.webpackChunkdevsite||[]).push([[334],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,k=p["".concat(d,".").concat(m)]||p[m]||c[m]||a;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5813:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return d},toc:function(){return s},default:function(){return c}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),l=["components"],o={id:"C",title:"C & Android"},d={unversionedId:"didkit-interfaces/C",id:"didkit-interfaces/C",isDocsHomePage:!1,title:"C & Android",description:"At a Glance",source:"@site/docs/didkit-interfaces/C.md",sourceDirName:"didkit-interfaces",slug:"/didkit-interfaces/C",permalink:"/docs/didkit-interfaces/C",editUrl:"https://github.com/spruceid/docs/didkit-interfaces/C.md",version:"current",frontMatter:{id:"C",title:"C & Android"},sidebar:"docs",previous:{title:"Rust Crate",permalink:"/docs/didkit-interfaces/rust"},next:{title:"Java",permalink:"/docs/didkit-interfaces/java"}},s=[{value:"At a Glance",id:"at-a-glance",children:[]},{value:"Installation",id:"installation",children:[{value:"Build",id:"build",children:[]},{value:"Test",id:"test",children:[]}]},{value:"Android",id:"android",children:[{value:"Requirements",id:"requirements",children:[]},{value:"Build",id:"build-1",children:[]}]},{value:"Examples",id:"examples",children:[]}],u={toc:s};function c(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"at-a-glance"},"At a Glance"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Of all the interfaces DIDKit exposes, the C library is closest to the Rust original.  "),(0,a.kt)("li",{parentName:"ul"},"For a quick function & type reference, you can study the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/c/test.c"},"test.c file"),". "),(0,a.kt)("li",{parentName:"ul"},"A C header file can be built, but it resides in a separate crate that must be compiled separately after building DIDKit. Instructions can be found ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/cbindings/README.md"},"here")),(0,a.kt)("li",{parentName:"ul"},"All the low-level calls that DIDKit exposes for C are documented in the ",(0,a.kt)("a",{parentName:"li",href:"https://rust.didkit.dev/didkit/c/index.html"},"C-module section")," of the ",(0,a.kt)("a",{parentName:"li",href:"https://rust.didkit.dev/didkit"},"Rust documentation"),". "),(0,a.kt)("li",{parentName:"ul"},"To build manually and just for Android, building from the C wrapper is faster and simpler than going through Flutter; for instructions, see the Android section below.")),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Install Rust and DIDKit ",(0,a.kt)("a",{parentName:"p",href:"didkit/install#manual"},"as usual")," and then: "),(0,a.kt)("h3",{id:"build"},"Build"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/release/libdidkit.so\n")),(0,a.kt)("h3",{id:"test"},"Test"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/test/c.stamp\n")),(0,a.kt)("p",null,"More detailed C tests can be found in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/spruceid/didkit/blob/main/lib/c/test.c"},"C\nlibrary")," of the\nDIDKit repository on GitHub. This doubles as a comprehensive code snippet\ndemonstrating key calls and responses in C."),(0,a.kt)("h2",{id:"android"},"Android"),(0,a.kt)("p",null,"DIDKit can be exposed to Android projects using the ",(0,a.kt)("a",{parentName:"p",href:"https://developer.android.com/studio/projects/android-library.html#aar-contents"},"Android Library (AAR file)"),". This AAR file includes Java class files using ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Java_Native_Interface"},"JNI"),", and binary shared libraries for Android's supported architectures (x86, armeabi-v7a, arm64-v8a, x86","_","64). The AAR can be added to existing Android projects using Android Studio or Gradle."),(0,a.kt)("h3",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,"Android SDK and NDK for Linux x86","_","64. The Android SDK is expected to be installed at ",(0,a.kt)("inlineCode",{parentName:"p"},"~/Android/Sdk"),". If it is somewhere else instead, you can specify it with a Make variable, e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"make ANDROID_SDK_ROOT=/other/location/android-sdk"),". "),(0,a.kt)("p",null,"Rust Android targets are also required. To install those with ",(0,a.kt)("inlineCode",{parentName:"p"},"rustup"),", run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"//from root directory of didkit project\n$ make -C lib install-rustup-android\n")),(0,a.kt)("h3",{id:"build-1"},"Build"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"//from root directory of didkit project\n$ make -C lib ../target/test/aar.stamp\n")),(0,a.kt)("h4",{id:"make-variables"},"Make variables"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ANDROID_SDK_ROOT")," - path to Android SDK. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"~/Android/Sdk")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ANDROID_TOOLS")," - Android tools directory. Default is to pick one matching ",(0,a.kt)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/build-tools/*"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ANDROID_NDK_HOME")," - Android NDK directory. Default is ",(0,a.kt)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/ndk-bundle)")," if exists, or one matching ",(0,a.kt)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/ndk/*"),".")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Tool"),(0,a.kt)("th",{parentName:"tr",align:null},"Example"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"C wrapper"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/spruceid/didkit/blob/main/lib/c/test.c"},"Test file"))))))}c.isMDXComponent=!0}}]);