(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{112:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),s=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),u=r,m=p["".concat(o,".").concat(u)]||p[u]||b[u]||i;return n?a.a.createElement(m,c(c({ref:t},d),{},{components:n})):a.a.createElement(m,c({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var d=2;d<i;d++)o[d]=n[d];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),i=(n(0),n(112)),o=["components"],c={id:"node",title:"Node.JS"},l={unversionedId:"didkit-interfaces/node",id:"didkit-interfaces/node",isDocsHomePage:!1,title:"Node.JS",description:"At a Glance",source:"@site/docs\\didkit-interfaces\\Node.md",slug:"/didkit-interfaces/node",permalink:"/docs/didkit-interfaces/node",editUrl:"https://github.com/spruceid/docs/didkit-interfaces/Node.md",version:"current",sidebar:"docs",previous:{title:"Python",permalink:"/docs/didkit-interfaces/python"},next:{title:"Overview of Examples",permalink:"/docs/didkit-examples/overview"}},d=[{value:"At a Glance",id:"at-a-glance",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Examples",id:"examples",children:[]}],s={toc:d};function p(e){var t=e.components,n=Object(a.a)(e,o);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"at-a-glance"},"At a Glance"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Two slightly different versions of the DIDKit binary can be installed via ",Object(i.b)("inlineCode",{parentName:"li"},"npm install"),', both vendored under the heading "@spruceid":',Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("a",{parentName:"strong",href:"https://www.npmjs.com/package/@spruceid/didkit"},"didkit-node"))," is optimized for Javascript/Node.JS environments, with bindings generated with ",Object(i.b)("strong",{parentName:"li"},Object(i.b)("a",{parentName:"strong",href:"https://github.com/neon-bindings/neon"},"neon"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("a",{parentName:"strong",href:"https://www.npmjs.com/package/didkit-wasm"},"didkit-wasm"))," is packed to operate in browser and blockchain contexts via ",Object(i.b)("strong",{parentName:"li"},Object(i.b)("a",{parentName:"strong",href:"https://github.com/rustwasm/wasm-pack/"},"wasm-pack"))))),Object(i.b)("li",{parentName:"ul"},"For a quick function & type reference, you can check out the ",Object(i.b)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/node/README.md#Issuing-a-Credential"},"Issuing a Credential")," and ",Object(i.b)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/node/README.md#Options"},"Options")," sections of the ",Object(i.b)("inlineCode",{parentName:"li"},"/lib/node/README.md")," file in the DIDKit repo. Better yet, install it and run the commands yourself!"),Object(i.b)("li",{parentName:"ul"},"To test your installation or just to see examples of calls and returns with valid DID-key test vectors, see the provided ",Object(i.b)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/node/test/index.spec.js"},"test script")," "),Object(i.b)("li",{parentName:"ul"},"An experimental ASM.JS implementation is ",Object(i.b)("a",{parentName:"li",href:"https://www.npmjs.com/package/didkit-wasm#ASM-target"},"provided for reference")," but not maintained or recommended for the casual developer.")),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("p",null,"Installation over node package managers is quite simple. Run this command to confirm version number and proper operation of basic functions:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// Import the module\nconst DIDKit = require('didkit');\n\nconsole.log(DIDKit.getVersion());\n\n// To issue credentials and presentations, you need a key.\n// The library provides a function to generate one.\nconst key = DIDKit.generateEd25519Key();\n\n// There are two helpful functions to obtain a DID and the `did:key`\n// `verificationMethod` from the key.\nconst did = DIDKit.keyToDID('key', key);\nconst verificationMethod = DIDKit.keyToVerificationMethod('key', key);\n")),Object(i.b)("h2",{id:"examples"},"Examples"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Components"),Object(i.b)("th",{parentName:"tr",align:null},"Example"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Wasm, Blockchain Indexer"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"https://github.com/spruceid/tzprofiles/blob/main/api/service/index.js"},"JS Code"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Web Application, dApp"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"https://github.com/spruceid/tzprofiles/tree/main/dapp"},"JS Code"))))))}p.isMDXComponent=!0}}]);