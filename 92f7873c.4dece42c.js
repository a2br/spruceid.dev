(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{105:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),u=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},s=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=u(n),s=a,m=d["".concat(l,".").concat(s)]||d[s]||b[s]||r;return n?i.a.createElement(m,o(o({ref:t},p),{},{components:n})):i.a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=s;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return d}));var a=n(3),i=n(7),r=(n(0),n(105)),l=["components"],o={id:"example--svelte-chapi",title:"Svelte CHAPI"},c={unversionedId:"didkit/example--svelte-chapi",id:"didkit/example--svelte-chapi",isDocsHomePage:!1,title:"Svelte CHAPI",description:"Source//github.com/spruceid/didkit/tree/main/examples/svelte-chapi-wallet",source:"@site/docs/didkit/example--svelte-chapi.md",slug:"/didkit/example--svelte-chapi",permalink:"/docs/didkit/example--svelte-chapi",editUrl:"https://github.com/spruceid/spruceid.dev/edit/main/docs/didkit/example--svelte-chapi.md",version:"current",sidebar:"docs",previous:{title:"Spring Boot Java AuthN Service",permalink:"/docs/didkit/example--java-springboot"},next:{title:"Introducing the Credible Wallet",permalink:"/docs/credible/"}},p=[{value:"Introduction",id:"introduction",children:[]},{value:"Installation",id:"installation",children:[{value:"<code>DIDKit</code>",id:"didkit",children:[]},{value:"Building",id:"building",children:[]},{value:"Running",id:"running",children:[]}]},{value:"Building and running in production mode",id:"building-and-running-in-production-mode",children:[]}],u={toc:p};function d(e){var t=e.components,n=Object(i.a)(e,l);return Object(r.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Source: ",Object(r.b)("a",{parentName:"p",href:"https://github.com/spruceid/didkit/tree/main/examples/svelte-chapi-wallet"},"https://github.com/spruceid/didkit/tree/main/examples/svelte-chapi-wallet")),Object(r.b)("h2",{id:"introduction"},"Introduction"),Object(r.b)("p",null,"This project demonstrates how to implement a ",Object(r.b)("a",{parentName:"p",href:"https://w3c-ccg.github.io/credential-handler-api/"},"CHAPI"),"-conformant Wallet using\n",Object(r.b)("a",{parentName:"p",href:"https://github.com/spruceid/didkit"},Object(r.b)("inlineCode",{parentName:"a"},"DIDKit"))," compiled to WASM and the Svelte\nweb development framework. It uses did:key as its only DID Method."),Object(r.b)("p",null,"Features:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Simple listing of credentials"),Object(r.b)("li",{parentName:"ul"},"Responds to GET and STORE requests",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"[STORE]"," Verifies credentials with DIDKit and stores them."),Object(r.b)("li",{parentName:"ul"},"[GET]"," Issues VPs generated and signed using DIDKit")))),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)("p",null,"To be able to run this example, you will need to build ",Object(r.b)("inlineCode",{parentName:"p"},"DIDKit")," for the WASM\ntarget. More instructions about the process can be found\n",Object(r.b)("a",{parentName:"p",href:"https://github.com/spruceid/didkit/tree/main/lib/wasm"},"here"),". You will also\nneed the ",Object(r.b)("a",{parentName:"p",href:"https://yarnpkg.com/"},"Yarn")," package manager."),Object(r.b)("h3",{id:"didkit"},Object(r.b)("inlineCode",{parentName:"h3"},"DIDKit")),Object(r.b)("p",null,"In short, you need to install the ",Object(r.b)("inlineCode",{parentName:"p"},"wasm-unknown-unknown")," Rust target and\n",Object(r.b)("inlineCode",{parentName:"p"},"wasm-pack"),", which can be done with the following command on the root of\n",Object(r.b)("inlineCode",{parentName:"p"},"DIDKit"),":"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"$ make -C lib install-wasm-pack\n")),Object(r.b)("h3",{id:"building"},"Building"),Object(r.b)("p",null,"Then, you have to build the WASM target of ",Object(r.b)("inlineCode",{parentName:"p"},"DIDKit"),":"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"$ make -C lib ../target/test/wasm.stamp\n")),Object(r.b)("p",null,"If everything succeeds, you can proceed to the next step."),Object(r.b)("h3",{id:"running"},"Running"),Object(r.b)("p",null,"Install the ",Object(r.b)("inlineCode",{parentName:"p"},"npm")," dependencies of this example project using the ",Object(r.b)("a",{parentName:"p",href:"https://yarnpkg.com/"},"Yarn"),"\npackage manager:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"$ cd examples/svelte-chapi-wallet\n$ yarn install\n")),Object(r.b)("p",null,"The run the app in development mode with:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"$ yarn run dev\n")),Object(r.b)("p",null,"You should now be able to see the app running on\n",Object(r.b)("a",{parentName:"p",href:"http://localhost:5000"},"localhost:5000"),"."),Object(r.b)("h2",{id:"building-and-running-in-production-mode"},"Building and running in production mode"),Object(r.b)("p",null,"To create an optimised version of the app:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"$ yarn run build\n")),Object(r.b)("p",null,"You can run the newly built app with ",Object(r.b)("inlineCode",{parentName:"p"},"yarn run start"),". This uses\n",Object(r.b)("a",{parentName:"p",href:"https://github.com/lukeed/sirv"},"sirv"),", which is included in your\npackage.json's ",Object(r.b)("inlineCode",{parentName:"p"},"dependencies")," so the app will function when deployed to\nplatforms such as ",Object(r.b)("a",{parentName:"p",href:"https://heroku.com"},"Heroku"),"."))}d.isMDXComponent=!0}}]);