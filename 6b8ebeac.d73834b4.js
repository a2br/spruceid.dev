(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{112:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return m}));var i=r(0),n=r.n(i);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function d(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=n.a.createContext({}),l=function(e){var t=n.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):d(d({},t),e)),r},p=function(e){var t=l(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},b=n.a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(r),b=i,m=p["".concat(a,".").concat(b)]||p[b]||u[b]||o;return r?n.a.createElement(m,d(d({ref:t},s),{},{components:r})):n.a.createElement(m,d({ref:t},s))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=b;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:i,a[1]=d;for(var s=2;s<o;s++)a[s]=r[s];return n.a.createElement.apply(null,a)}return n.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},90:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return d})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return p}));var i=r(3),n=r(7),o=(r(0),r(112)),a=["components"],d={id:"did-methods",title:"DID Methods Supported",hide_title:!0,sidebar_label:"DID Methods"},c={unversionedId:"didkit/did-methods",id:"didkit/did-methods",isDocsHomePage:!1,title:"DID Methods Supported",description:"DID Methods supported today:",source:"@site/docs\\didkit\\did-methods.md",slug:"/didkit/did-methods",permalink:"/docs/didkit/did-methods",editUrl:"https://github.com/spruceid/docs/didkit/did-methods.md",version:"current",sidebar_label:"DID Methods",sidebar:"docs",previous:{title:"Installation",permalink:"/docs/didkit/install"},next:{title:"Core Concepts",permalink:"/docs/didkit/concepts"}},s=[{value:"DID Methods supported today:",id:"did-methods-supported-today",children:[]},{value:"Proof types verifiable so far:",id:"proof-types-verifiable-so-far",children:[]}],l={toc:s};function p(e){var t=e.components,r=Object(n.a)(e,a);return Object(o.b)("wrapper",Object(i.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"did-methods-supported-today"},"DID Methods supported today:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://did-tezos-draft.spruceid.com/"},"did-tezos"),': architected by Spruce, did:tezos supports a powerful and robust multi-layer architecture.  This includes support for "implicit" (unpublished) DIDs, on-chain (published) DIDs, DIDs that begin their lives as the former and become the latter, and additional metadata local to specific networks, including Sidetree networks.'),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://w3c-ccg.github.io/did-method-key/"},"did-key"),": the classic deterministic method for generating DIDs deterministically from a JWK file or other local key material"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/spruceid/ssi/blob/main/did-pkh/did-pkh-method-draft.md"},"did-pkh"),': a did-key-like deterministic method for generating DIDs from blockchain addresses encoded and validated according to the emerging "CAIP" cross-chain addressing ',Object(o.b)("a",{parentName:"li",href:"https://github.com/ChainAgnostic/CAIPs"},"specification")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://w3c-ccg.github.io/did-method-web/"},"did-web"),': a DID method for publishing a DID document to a domain\'s "/.wellknown/" configuration directory, to be resolved over HTTPS'),Object(o.b)("li",{parentName:"ul"},"did-webkey: a DID method designed in-house for deterministically deriving DID Documents from key material exposed by major web APIs; while we implemented it specifically for the SSH and GPG keys exposed and consumed by GitHub's APIs, it could readily be extended to analogous contexts."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://blockchaincommons.github.io/did-method-onion/"},"did:onion"),": a DID method designed to be resolved over Tor-style onion routing"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/decentralized-identity/ethr-did-resolver/blob/master/doc/did-method-spec.md"},"did-ethr"),": the classic Ethereum-based DID method at the heart of uPort, Veramo, and many web3 dApp projects (implicit only; main-net indexing & resolution coming soon)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://identity-com.github.io/sol-did/did-method-spec.html"},"did-sol"),": the native DID method of the Solana blockchain and DeFi ecosystem")),Object(o.b)("h2",{id:"proof-types-verifiable-so-far"},"Proof types verifiable so far:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"RSASignature2018"),Object(o.b)("li",{parentName:"ul"},"Ed25519VerificationKeys"),Object(o.b)("li",{parentName:"ul"},"EcdsaSecp256k1Signature2019"),Object(o.b)("li",{parentName:"ul"},"EcdsaSecp256r1Signature2019"),Object(o.b)("li",{parentName:"ul"},"EcdsaSecp256k1RecoverySignature2020"),Object(o.b)("li",{parentName:"ul"},"Eip712Signature2021"),Object(o.b)("li",{parentName:"ul"},"SolanaSignature2021"),Object(o.b)("li",{parentName:"ul"},"JsonWebSignature2020")))}p.isMDXComponent=!0}}]);