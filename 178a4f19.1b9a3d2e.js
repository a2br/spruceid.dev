(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{112:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=n.a.createContext({}),b=function(e){var t=n.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},s=function(e){var t=b(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=b(a),u=r,m=s["".concat(l,".").concat(u)]||s[u]||p[u]||i;return a?n.a.createElement(m,d(d({ref:t},c),{},{components:a})):n.a.createElement(m,d({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var c=2;c<i;c++)l[c]=a[c];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},71:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return d})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return s}));var r=a(3),n=a(7),i=(a(0),a(112)),l=["components"],d={id:"java",title:"Java"},o={unversionedId:"didkit-interfaces/java",id:"didkit-interfaces/java",isDocsHomePage:!1,title:"Java",description:"[path-packages]//dart.dev/tools/pub/dependencies#path-packages",source:"@site/docs\\didkit-interfaces\\java.md",slug:"/didkit-interfaces/java",permalink:"/docs/didkit-interfaces/java",editUrl:"https://github.com/spruceid/docs/didkit-interfaces/java.md",version:"current",sidebar:"docs",previous:{title:"C & Android",permalink:"/docs/didkit-interfaces/C"},next:{title:"Python",permalink:"/docs/didkit-interfaces/python"}},c=[{value:"At a Glance",id:"at-a-glance",children:[]},{value:"Installation",id:"installation",children:[{value:"Build",id:"build",children:[]},{value:"Test",id:"test",children:[]},{value:"+ Android",id:"-android",children:[]}]},{value:"Android",id:"android",children:[{value:"Requires",id:"requires",children:[]},{value:"Build",id:"build-1",children:[]}]},{value:"Examples",id:"examples",children:[]}],b={toc:c};function s(e){var t=e.components,a=Object(n.a)(e,l);return Object(i.b)("wrapper",Object(r.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"at-a-glance"},"At a Glance"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"DIDKit exposes a straightforward set of Java bindings, using the Java Native Interface (",Object(i.b)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Java_Native_Interface"},"JNI"),").  "),Object(i.b)("li",{parentName:"ul"},"The ",Object(i.b)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/JAR_(file_format)"},"JAR")," file includes all of DIDKit's Java class files. To use this in an\napplication, you must also include the shared library (",Object(i.b)("inlineCode",{parentName:"li"},"libdidkit.so"),") in your\napplication in the Java library path"),Object(i.b)("li",{parentName:"ul"},"For a quick function & type reference, you can study the ",Object(i.b)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/java/test/com/spruceid/DIDKitTest.java"},"DIDKitTest.java\nfile"),". "),Object(i.b)("li",{parentName:"ul"},"All the low-level calls that the Rust library exposes to JNI are documented in the\n",Object(i.b)("a",{parentName:"li",href:"https://rust.didkit.dev/didkit/jni/index.html"},"JNI section")," of the ",Object(i.b)("a",{parentName:"li",href:"https://rust.didkit.dev/didkit"},"Rust\ndocumentation"),". ")),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("p",null,"Install Rust and DIDKit ",Object(i.b)("a",{parentName:"p",href:"/docs/didkit/install.md#manual"},"as usual")," and then: "),Object(i.b)("h3",{id:"build"},"Build"),Object(i.b)("p",null,"Run:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/didkit.jar\n")),Object(i.b)("p",null,"To build the shared library for your current platform/architecture:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/release/libdidkit.so\n")),Object(i.b)("h3",{id:"test"},"Test"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/tests/java.stamp\n")),Object(i.b)("h3",{id:"-android"},"+ Android"),Object(i.b)("p",null,"For Android, build the separate ",Object(i.b)("a",{parentName:"p",href:"#android"},"Android library (AAR file)")," which includes the Java class files and shared libraries for all Android targets."),Object(i.b)("h2",{id:"android"},"Android"),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://developer.android.com/studio/projects/android-library.html#aar-contents"},"Android Library (AAR file)")," for DIDKit. The AAR file includes Java class files using ",Object(i.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Java_Native_Interface"},"JNI"),", and binary shared libraries for Android's supported architectures (x86, armeabi-v7a, arm64-v8a, x86","_","64). The AAR can be added to existing Android projects using Android Studio or Gradle."),Object(i.b)("h3",{id:"requires"},"Requires"),Object(i.b)("p",null,"Android SDK and NDK for Linux x86","_","64. The Android SDK is expected to be installed at ",Object(i.b)("inlineCode",{parentName:"p"},"~/Android/Sdk"),". If it is somewhere else instead, you can specify it with a Make variable, e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"make ANDROID_SDK_ROOT=/other/location/android-sdk"),". "),Object(i.b)("p",null,"Rust Android targets are also required. To install those with ",Object(i.b)("inlineCode",{parentName:"p"},"rustup"),", run:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"//from root directory of didkit project\n$ make -C lib install-rustup-android\n")),Object(i.b)("h3",{id:"build-1"},"Build"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"//from root directory of didkit project\n$ make -C lib ../target/test/aar.stamp\n")),Object(i.b)("h4",{id:"make-variables"},"Make variables"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"ANDROID_SDK_ROOT")," - path to Android SDK. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"~/Android/Sdk")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"ANDROID_TOOLS")," - Android tools directory. Default is to pick one matching ",Object(i.b)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/build-tools/*"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"ANDROID_NDK_HOME")," - Android NDK directory. Default is ",Object(i.b)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/ndk-bundle)")," if exists, or one matching ",Object(i.b)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/ndk/*"),".")),Object(i.b)("h2",{id:"examples"},"Examples"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Tool"),Object(i.b)("th",{parentName:"tr",align:null},"Example"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Authentication, Tomcat, CHAPI"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"https://github.com/spruceid/didkit/examples/java-jsp/readme.md"},"Github"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Authentication, Maven, MySQL, Redis"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"https://github.com/spruceid/didkit/examples/java-springboot/readme.md"},"Github"))))))}s.isMDXComponent=!0}}]);