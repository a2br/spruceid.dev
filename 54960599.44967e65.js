(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{105:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var a=t(0),i=t.n(a);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),c=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},p=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,r=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),d=c(t),p=a,m=d["".concat(r,".").concat(p)]||d[p]||u[p]||l;return t?i.a.createElement(m,o(o({ref:n},s),{},{components:t})):i.a.createElement(m,o({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,r=new Array(l);r[0]=p;var o={};for(var b in n)hasOwnProperty.call(n,b)&&(o[b]=n[b]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var s=2;s<l;s++)r[s]=t[s];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},78:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return b})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return d}));var a=t(3),i=t(7),l=(t(0),t(105)),r=["components"],o={id:"install",title:"Installation"},b={unversionedId:"credible/install",id:"credible/install",isDocsHomePage:!1,title:"Installation",description:"App stores",source:"@site/docs/credible/install.md",slug:"/credible/install",permalink:"/docs/credible/install",editUrl:"https://github.com/spruceid/docs/credible/install.md",version:"current",sidebar:"docs",previous:{title:"Core Concepts",permalink:"/docs/credible/concepts"},next:{title:"Authenticating to other services",permalink:"/docs/credible/authn"}},s=[{value:"App stores",id:"app-stores",children:[]},{value:"Common Dependencies",id:"common-dependencies",children:[{value:"Rust",id:"rust",children:[]},{value:"Java",id:"java",children:[]},{value:"Flutter",id:"flutter",children:[]},{value:"<code>wasm-pack</code> (Required for both WEB targets)",id:"wasm-pack-required-for-both-web-targets",children:[]},{value:"<code>binaryen</code>",id:"binaryen",children:[]},{value:"DIDKit and SSI",id:"didkit-and-ssi",children:[]}]},{value:"Target-Specific Dependencies",id:"target-specific-dependencies",children:[{value:"Android Dependencies",id:"android-dependencies",children:[]},{value:"iOS Dependencies",id:"ios-dependencies",children:[]},{value:"Web Dependencies",id:"web-dependencies",children:[]}]},{value:"Building DIDKit for different targets",id:"building-didkit-for-different-targets",children:[{value:"Android",id:"android",children:[]},{value:"Android APK",id:"android-apk",children:[]},{value:"Android App Bundle",id:"android-app-bundle",children:[]},{value:"iOS",id:"ios",children:[]},{value:"Web <em>using WASM</em>",id:"web-using-wasm",children:[]},{value:"Web <em>using ASM.js</em>",id:"web-using-asmjs",children:[]}]},{value:"Building Credible",id:"building-credible",children:[{value:"Run on emulator",id:"run-on-emulator",children:[]},{value:"Run on browser",id:"run-on-browser",children:[]},{value:"iOS .app for Simulator",id:"ios-app-for-simulator",children:[]},{value:"iOS .app for Devices",id:"ios-app-for-devices",children:[]},{value:"iOS IPA",id:"ios-ipa",children:[]},{value:"Web",id:"web",children:[]},{value:"Note about <code>nullsafety</code>",id:"note-about-nullsafety",children:[]},{value:"Note about <code>canvaskit</code>",id:"note-about-canvaskit",children:[]}]},{value:"Troubleshooting",id:"troubleshooting",children:[{value:"Build Environment Problems",id:"build-environment-problems",children:[]},{value:"Opaque Makefile error messages",id:"opaque-makefile-error-messages",children:[]}]}],c={toc:s};function d(e){var n=e.components,t=Object(i.a)(e,r);return Object(l.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"app-stores"},"App stores"),Object(l.b)("p",null,"We are also in the process of listing Credible on the iOS TestFlight and Android\nPlay Beta programs, and eventually their respective app marketplaces plus\nF-Droid."),Object(l.b)("h2",{id:"common-dependencies"},"Common Dependencies"),Object(l.b)("p",null,"To manually build Credible for either Android or iOS, you will need to install\nthe following dependencies (instructions follow):"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Rust"),Object(l.b)("li",{parentName:"ul"},"Java 7 or higher"),Object(l.b)("li",{parentName:"ul"},"Flutter (",Object(l.b)("inlineCode",{parentName:"li"},"dev")," channel)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"https://github.com/spruceid/didkit"},"DIDKit"),"/",Object(l.b)("a",{parentName:"li",href:"https://github.com/spruceid/ssi"},"SSI")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"wasm-pack")," (WEB)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"binaryen")," (WEB and targeting ASM.js)")),Object(l.b)("h3",{id:"rust"},"Rust"),Object(l.b)("p",null,"It is recommended to use ",Object(l.b)("a",{parentName:"p",href:"https://www.rust-lang.org/tools/install"},"rustup")," to\nmanage your Rust installation."),Object(l.b)("h3",{id:"java"},"Java"),Object(l.b)("p",null,"On Ubuntu you could run:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"# apt update\n# apt install openjdk-8-jdk\n")),Object(l.b)("p",null,"For more information, please refer to the documentation of your favorite flavour\nof Java and your operating system/package manager."),Object(l.b)("h3",{id:"flutter"},"Flutter"),Object(l.b)("p",null,"Please follow the official instalation instructions available\n",Object(l.b)("a",{parentName:"p",href:"https://flutter.dev/docs/get-started/install"},"here")," to install Flutter,\ndon't forget to also install the build dependencies for the platform you\nwill be building (Android SDK/NDK, Xcode, etc)."),Object(l.b)("p",null,"We currently only support build this project using the ",Object(l.b)("inlineCode",{parentName:"p"},"dev")," channel of Flutter."),Object(l.b)("p",null,"To change your installation to the ",Object(l.b)("inlineCode",{parentName:"p"},"dev")," channel, please execute the following command:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter channel dev\n$ flutter upgrade\n")),Object(l.b)("p",null,"To confirm that everything is setup correctly, please run the following command\nand resolve any issues that arise before proceeding to the next steps."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter doctor\n")),Object(l.b)("h3",{id:"wasm-pack-required-for-both-web-targets"},Object(l.b)("inlineCode",{parentName:"h3"},"wasm-pack")," (Required for both WEB targets)"),Object(l.b)("p",null,"The wasm-pack cannot yet be compiled from crates.io. For now, to build the WASM\ntarget you will need ",Object(l.b)("inlineCode",{parentName:"p"},"wasm-pack"),", the fastest way is to fetch the script from\ngithub and run it in the credible root directory:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh\n")),Object(l.b)("h3",{id:"binaryen"},Object(l.b)("inlineCode",{parentName:"h3"},"binaryen")),Object(l.b)("p",null,"To build Credible for WEB using ASM.js you will need\n",Object(l.b)("a",{parentName:"p",href:"https://github.com/WebAssembly/binaryen"},"binaryen"),", which allows the conversion\nof DIDKit WASM to ASM.js. This is necessary in context where WASM support is not\navailable and DIDKit needs to run in pure Javascript. More detailed instructions\non how to build ",Object(l.b)("inlineCode",{parentName:"p"},"binaryen")," can be found\n",Object(l.b)("a",{parentName:"p",href:"https://github.com/WebAssembly/binaryen"},"here"),"."),Object(l.b)("p",null,"If you are in a UNIX-like distribution you just have to clone the repo and build,\nwe recommend cloning into your ",Object(l.b)("inlineCode",{parentName:"p"},"${HOME}"),", to avoid having to specify the\n",Object(l.b)("inlineCode",{parentName:"p"},"${BINARYEN_ROOT}")," variable:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/WebAssembly/binaryen ~/binaryen\n$ cd ~/binaryen\n$ cmake . && make\n")),Object(l.b)("p",null,"Not that binaryen support for OS X and Windows is still limited, so it is highly\nrecommended to build it in a linux shell on OS X and on WSL2 in Windows. For\ninstructions on building it natively in Windows, see ",Object(l.b)("a",{parentName:"p",href:"https://github.com/WebAssembly/binaryen#faq"},"the binaryen\nFAQ")," on github."),Object(l.b)("h3",{id:"didkit-and-ssi"},"DIDKit and SSI"),Object(l.b)("p",null,"This project also depends on two other Spruce projects,\n",Object(l.b)("a",{parentName:"p",href:"https://github.com/spruceid/didkit"},Object(l.b)("inlineCode",{parentName:"a"},"DIDKit"))," and\n",Object(l.b)("a",{parentName:"p",href:"https://github.com/spruceid/ssi"},Object(l.b)("inlineCode",{parentName:"a"},"SSI")),". "),Object(l.b)("p",null,"These projects are all configured to work with relative paths by default, so it\nis recommended to clone them all as subdirectories of the same root directory,\nfor example\n",Object(l.b)("inlineCode",{parentName:"p"},"$HOME/spruceid/didkit\n$HOME/spruceid/ssi\n$HOME/spruceid/credible\n$HOME/spruceid/treehouse\netc")),Object(l.b)("h2",{id:"target-specific-dependencies"},"Target-Specific Dependencies"),Object(l.b)("h3",{id:"android-dependencies"},"Android Dependencies"),Object(l.b)("p",null,"To build Credible for Android, you will require both the Android SDK and NDK."),Object(l.b)("p",null,"These two dependencies can be easily obtained with ",Object(l.b)("a",{parentName:"p",href:"https://developer.android.com/studio/install"},"Android\nStudio"),', which install further\ndependencies upon first being opened after installation. Installing the\nappropriate Android NDK (often not the newest) in Android Studio can be\naccomplished by going to Settings > Appearance & Behavior > System Settings >\nAndroid SDK and selecting to install the "NDK (Side by Side)". An alternative\nmethod of installing SDK and NDK without Android Studio can be found in the\noptional\n',Object(l.b)("a",{parentName:"p",href:"https://github.com/spruceid/credible/blob/main/install_android_dependencies.sh"},"install_android_dependencies.sh"),"\nscript included here."),Object(l.b)("p",null,"If your Android SDK doesn't live at ",Object(l.b)("inlineCode",{parentName:"p"},"$HOME/Android/Sdk")," you will need to set\n",Object(l.b)("inlineCode",{parentName:"p"},"ANDROID_SDK_ROOT")," like so:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ export ANDROID_SDK_ROOT=/path/to/Android/Sdk\n")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Note: Some users have experienced difficulties with expected cross-compilation\nartefacts missing from the newest NDK, which is downloaded by default in the\ninstallation process.  If you experience errors of this kind, you may have to\nmanually downgrade or install multiple NDK versions as ","[shown\nhere]",")(img/ndk_downgrade.png) in the Android Studio installer (screengrabbed\nfrom an Ubuntu installation). Alternately, running all or parts of the\n",Object(l.b)("a",{parentName:"em",href:"install_android_dependencies.sh"},"install_android_dependencies.sh")," script may be\nhelpful.")),Object(l.b)("p",null,"If your ",Object(l.b)("inlineCode",{parentName:"p"},"build-tools")," and/or ",Object(l.b)("inlineCode",{parentName:"p"},"NDK"),"  live in different locations than the default ones inside /SDK/, or if you want to specify a specific NDK or build-tools version, you can manually configure the following two environment variables:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ export ANDROID_TOOLS=/path/to/SDK/build-tools/XX.X.X/\n$ export ANDROID_NDK_HOME=/path/to/SDK/ndk/XX.X.XXXXX/\n")),Object(l.b)("p",null,"::: "),Object(l.b)("h3",{id:"ios-dependencies"},"iOS Dependencies"),Object(l.b)("p",null,"To build Credible for iOS you will need to install CocoaPods, which can be done\nwith Homebrew on MacOS, WSL2, or Linux-based systems. You will also need\n",Object(l.b)("a",{parentName:"p",href:"https://developer.apple.com/xcode/"},"XCode"),", which is not available for WSL2 or\nLinux systems; it is currently possible but not recommended to install XCode\nin those build environments."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ sudo apt install linuxbrew-wrapper\n$ brew install cocoapods\n")),Object(l.b)("h3",{id:"web-dependencies"},"Web Dependencies"),Object(l.b)("p",null,"To build Credible for WASM, you will need the Node.JS and its package manager,\n",Object(l.b)("inlineCode",{parentName:"p"},"npm")," to be installed:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ sudo apt install nodejs\n$ sudo apt install npm\n")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Note: in some environments, such as Ubuntu 18.04, npm may not automatically\ninstall a new enough version for our makefile to execute succesfully; overriding\nit with ",Object(l.b)("inlineCode",{parentName:"em"},"npm"),"'s ",Object(l.b)("a",{parentName:"em",href:"https://github.com/npm/cli/issues/681#issuecomment-793916156"},"internal\ncommands")," may be\nnecessary.")),Object(l.b)("h2",{id:"building-didkit-for-different-targets"},"Building DIDKit for different targets"),Object(l.b)("h3",{id:"android"},"Android"),Object(l.b)("p",null,"To build ",Object(l.b)("inlineCode",{parentName:"p"},"DIDKit")," for the Android targets, you will go to the root of ",Object(l.b)("inlineCode",{parentName:"p"},"DIDKit"),"\nand run:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ make -C lib install-rustup-android\n$ make -C lib ../target/test/java.stamp\n$ make -C lib ../target/test/aar.stamp\n$ make -C lib ../target/test/flutter.stamp\n$ cargo build\n")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"This may take some time as it compiles the entire project for multiple targets")),Object(l.b)("h3",{id:"android-apk"},"Android APK"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter build apk --no-sound-null-safety\n")),Object(l.b)("h3",{id:"android-app-bundle"},"Android App Bundle"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter build appbundle --no-sound-null-safety\n")),Object(l.b)("h3",{id:"ios"},"iOS"),Object(l.b)("p",null,"To build DIDKit for the iOS targets, you wGo to the root of ",Object(l.b)("inlineCode",{parentName:"p"},"DIDKit")," and run\n: "),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ make -C lib install-rustup-ios \n$ make -C lib ../target/test/ios.stamp\n$ cargo build\n")),Object(l.b)("h3",{id:"web-using-wasm"},"Web ",Object(l.b)("em",{parentName:"h3"},"using WASM")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ make -C lib ../target/test/wasm.stamp\n")),Object(l.b)("h3",{id:"web-using-asmjs"},"Web ",Object(l.b)("em",{parentName:"h3"},"using ASM.js")),Object(l.b)("p",null,"If you have installed ",Object(l.b)("inlineCode",{parentName:"p"},"bynarien")," somewhere other than $HOME, you will have to\nset ",Object(l.b)("inlineCode",{parentName:"p"},"BYNARIEN_ROOT")," as shown below, otherwise, just run the ",Object(l.b)("inlineCode",{parentName:"p"},"make")," command."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ export BINARYEN_ROOT=/path/to/binaryen\n$ make -C lib ../target/test/asmjs.stamp\n")),Object(l.b)("h2",{id:"building-credible"},"Building Credible"),Object(l.b)("p",null,"You are now ready to build or run Credible."),Object(l.b)("h3",{id:"run-on-emulator"},"Run on emulator"),Object(l.b)("p",null,"If you want to run the project on your connected device, you can use:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter run --no-sound-null-safety\n")),Object(l.b)("h3",{id:"run-on-browser"},"Run on browser"),Object(l.b)("p",null,"If you want to run the project on your browser, you can use:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter run --no-sound-null-safety -d chrome --csp --release\n")),Object(l.b)("p",null,"Otherwise, Flutter allows us to build many artifacts for Android, iOS and WEB,\nbelow you can find the most common and useful commands, all of which you should\nrun from the root of Credible."),Object(l.b)("h3",{id:"ios-app-for-simulator"},"iOS .app for Simulator"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter build ios --no-sound-null-safety --no-codesign --simulator\n")),Object(l.b)("h3",{id:"ios-app-for-devices"},"iOS .app for Devices"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter build ios --no-sound-null-safety --no-codesign\n")),Object(l.b)("h3",{id:"ios-ipa"},"iOS IPA"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter build ipa --no-sound-null-safety\n")),Object(l.b)("h3",{id:"web"},"Web"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter build web \\\n  --no-sound-null-safety \\\n  --csp \\\n  --release\n")),Object(l.b)("p",null,"If you don't have support for WASM, you'll probably need to provide your own\n",Object(l.b)("inlineCode",{parentName:"p"},"canvaskit")," dependency without WASM as well as DIDKit, to do that you need to\nspecify the ",Object(l.b)("inlineCode",{parentName:"p"},"FLUTTER_WEB_CANVASKIT_URL")," in the build command like below."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter build web \\\n  --no-sound-null-safety \\\n  --csp \\\n  --dart-define=FLUTTER_WEB_CANVASKIT_URL=vendor/ \\\n  --release\n")),Object(l.b)("p",null,"For more details about any of these commands you can run"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter build $SUBCOMMAND --help\n")),Object(l.b)("h3",{id:"note-about-nullsafety"},"Note about ",Object(l.b)("inlineCode",{parentName:"h3"},"nullsafety")),Object(l.b)("p",null,"While we are ready to migrate to Dart with nullsafety, a couple of the\ndependencies of the project are still lagging behind, so we need to add ",Object(l.b)("inlineCode",{parentName:"p"},"--no-sound-null-safely")," to both run and build commands for the time being."),Object(l.b)("h3",{id:"note-about-canvaskit"},"Note about ",Object(l.b)("inlineCode",{parentName:"h3"},"canvaskit")),Object(l.b)("p",null,"Since by default ",Object(l.b)("inlineCode",{parentName:"p"},"canvaskit")," comes in a ",Object(l.b)("inlineCode",{parentName:"p"},"WASM")," build, in order to the ",Object(l.b)("inlineCode",{parentName:"p"},"ASM.js"),"\nbe fully supported ",Object(l.b)("inlineCode",{parentName:"p"},"canvaskit")," was manually built for this target."),Object(l.b)("p",null,"A prebuilt ",Object(l.b)("inlineCode",{parentName:"p"},"canvaskit")," is already included in the Credible web folder.\nIf you want to build it by yourself, however, follow these steps:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("a",{parentName:"li",href:"https://emscripten.org/docs/getting_started/downloads.html"},Object(l.b)("inlineCode",{parentName:"a"},"emscripten"))),Object(l.b)("li",{parentName:"ul"},"Clone ",Object(l.b)("a",{parentName:"li",href:"https://skia.org/user/download"},"Skia")," repository and pull its dependencies")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"git clone https://skia.googlesource.com/skia.git --depth 1 --branch canvaskit/0.22.0\ncd skia\npython2 tools/git-sync-deps\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Modify build script ",Object(l.b)("inlineCode",{parentName:"li"},"modules/canvaskit/compile.sh"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"diff --git a/modules/canvaskit/compile.sh b/modules/canvaskit/compile.sh\nindex 6ba58bfae9..51f0297eb6 100755\n--- a/modules/canvaskit/compile.sh\n+++ b/modules/canvaskit/compile.sh\n@@ -397,6 +397,7 @@ EMCC_DEBUG=1 ${EMCXX} \\\n     -s MODULARIZE=1 \\\n     -s NO_EXIT_RUNTIME=1 \\\n     -s INITIAL_MEMORY=128MB \\\n-    -s WASM=1 \\\n+    -s WASM=0 \\\n+    -s NO_DYNAMIC_EXECUTION=1 \\\n     $STRICTNESS \\\n     -o $BUILD_DIR/canvaskit.js\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Build ",Object(l.b)("inlineCode",{parentName:"li"},"canvaskit"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd modules/canvaskit\n$ make debug\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Replace this line on ",Object(l.b)("inlineCode",{parentName:"li"},"$SKIA/modules/canvaskit/canvaskit/bin/canvaskit.js"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-git"},"618c618\n< var isNode = !(new Function('try {return this===window;}catch(e){ return false;}')());\n---\n> var isNode = false;\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Copy ",Object(l.b)("inlineCode",{parentName:"p"},"$SKIA/modules/canvaskit/canvaskit/bin/canvaskit.js")," to\n",Object(l.b)("inlineCode",{parentName:"p"},"$CREDIBLE/web/vendor/"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Build Credible as described above."))),Object(l.b)("h2",{id:"troubleshooting"},"Troubleshooting"),Object(l.b)("h3",{id:"build-environment-problems"},"Build Environment Problems"),Object(l.b)("p",null,"If you encounter any errors in the build process described here, please first try\nclean builds of the projects listed."),Object(l.b)("p",null,"For instance, on Flutter, you can delete build files to start over by running:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ flutter clean\n")),Object(l.b)("p",null,"Also, reviewing the\n",Object(l.b)("a",{parentName:"p",href:"install_android_dependencies.sh"},"install_android_dependencies.sh")," script line\nby line or even rerunning it line by line may be helpful."),Object(l.b)("h3",{id:"opaque-makefile-error-messages"},"Opaque Makefile error messages"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"NPM may through an opaque error when compiling to WASM or ASM.js if ",Object(l.b)("inlineCode",{parentName:"li"},"apt\ninstall")," has installed too old of a version of ",Object(l.b)("inlineCode",{parentName:"li"},"npm")," based on your operating\nsystem kernel. This can be manually overridden from ",Object(l.b)("inlineCode",{parentName:"li"},"npm"),"'s ",Object(l.b)("a",{parentName:"li",href:"https://github.com/npm/cli/issues/681#issuecomment-793916156"},"internal\ncommands"))))}d.isMDXComponent=!0}}]);