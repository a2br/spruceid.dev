(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{112:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),b=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=b(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},p=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),s=b(n),p=r,m=s["".concat(l,".").concat(p)]||s[p]||u[p]||a;return n?i.a.createElement(m,o(o({ref:t},c),{},{components:n})):i.a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<a;c++)l[c]=n[c];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var r=n(3),i=n(7),a=(n(0),n(112)),l=["components"],o={id:"C",title:"C & Android"},d={unversionedId:"didkit-interfaces/C",id:"didkit-interfaces/C",isDocsHomePage:!1,title:"C & Android",description:"At a Glance",source:"@site/docs\\didkit-interfaces\\C.md",slug:"/didkit-interfaces/C",permalink:"/docs/didkit-interfaces/C",editUrl:"https://github.com/spruceid/docs/didkit-interfaces/C.md",version:"current",sidebar:"docs",previous:{title:"Rust Crate",permalink:"/docs/didkit-interfaces/rust"},next:{title:"Java",permalink:"/docs/didkit-interfaces/java"}},c=[{value:"At a Glance",id:"at-a-glance",children:[]},{value:"Installation",id:"installation",children:[{value:"Build",id:"build",children:[]},{value:"Test",id:"test",children:[]}]},{value:"Android",id:"android",children:[{value:"Requirements",id:"requirements",children:[]},{value:"Build",id:"build-1",children:[]}]},{value:"Examples",id:"examples",children:[]}],b={toc:c};function s(e){var t=e.components,n=Object(i.a)(e,l);return Object(a.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"at-a-glance"},"At a Glance"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Of all the interfaces DIDKit exposes, the C library is closest to the Rust original.  "),Object(a.b)("li",{parentName:"ul"},"For a quick function & type reference, you can study the ",Object(a.b)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/c/test.c"},"test.c file"),". "),Object(a.b)("li",{parentName:"ul"},"A C header file can be built, but it resides in a separate crate that must be compiled separately after building DIDKit. Instructions can be found ",Object(a.b)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/cbindings/README.md"},"here")),Object(a.b)("li",{parentName:"ul"},"All the low-level calls that DIDKit exposes for C are documented in the ",Object(a.b)("a",{parentName:"li",href:"https://rust.didkit.dev/didkit/c/index.html"},"C-module section")," of the ",Object(a.b)("a",{parentName:"li",href:"https://rust.didkit.dev/didkit"},"Rust documentation"),". "),Object(a.b)("li",{parentName:"ul"},"To build manually and just for Android, building from the C wrapper is faster and simpler than going through Flutter; for instructions, see the Android section below.")),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("p",null,"Install Rust and DIDKit ",Object(a.b)("a",{parentName:"p",href:"/docs/didkit/install.md#manual"},"as usual")," and then: "),Object(a.b)("h3",{id:"build"},"Build"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/release/libdidkit.so\n")),Object(a.b)("h3",{id:"test"},"Test"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/test/c.stamp\n")),Object(a.b)("p",null,"More detailed C tests can be found in the ",Object(a.b)("a",{parentName:"p",href:"https://github.com/spruceid/didkit/blob/main/lib/c/test.c"},"C\nlibrary")," of the\nDIDKit repository on GitHub. This doubles as a comprehensive code snippet\ndemonstrating key calls and responses in C."),Object(a.b)("h2",{id:"android"},"Android"),Object(a.b)("p",null,"DIDKit can be exposed to Android projects using the ",Object(a.b)("a",{parentName:"p",href:"https://developer.android.com/studio/projects/android-library.html#aar-contents"},"Android Library (AAR file)"),". This AAR file includes Java class files using ",Object(a.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Java_Native_Interface"},"JNI"),", and binary shared libraries for Android's supported architectures (x86, armeabi-v7a, arm64-v8a, x86","_","64). The AAR can be added to existing Android projects using Android Studio or Gradle."),Object(a.b)("h3",{id:"requirements"},"Requirements"),Object(a.b)("p",null,"Android SDK and NDK for Linux x86","_","64. The Android SDK is expected to be installed at ",Object(a.b)("inlineCode",{parentName:"p"},"~/Android/Sdk"),". If it is somewhere else instead, you can specify it with a Make variable, e.g. ",Object(a.b)("inlineCode",{parentName:"p"},"make ANDROID_SDK_ROOT=/other/location/android-sdk"),". "),Object(a.b)("p",null,"Rust Android targets are also required. To install those with ",Object(a.b)("inlineCode",{parentName:"p"},"rustup"),", run:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-sh"},"//from root directory of didkit project\n$ make -C lib install-rustup-android\n")),Object(a.b)("h3",{id:"build-1"},"Build"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-sh"},"//from root directory of didkit project\n$ make -C lib ../target/test/aar.stamp\n")),Object(a.b)("h4",{id:"make-variables"},"Make variables"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"ANDROID_SDK_ROOT")," - path to Android SDK. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"~/Android/Sdk")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"ANDROID_TOOLS")," - Android tools directory. Default is to pick one matching ",Object(a.b)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/build-tools/*"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"ANDROID_NDK_HOME")," - Android NDK directory. Default is ",Object(a.b)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/ndk-bundle)")," if exists, or one matching ",Object(a.b)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/ndk/*"),".")),Object(a.b)("h2",{id:"examples"},"Examples"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Tool"),Object(a.b)("th",{parentName:"tr",align:null},"Example"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"C wrapper"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"https://github.com/spruceid/didkit/blob/main/lib/c/test.c"},"Test file"))))))}s.isMDXComponent=!0}}]);